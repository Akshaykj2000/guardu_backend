const express = require("express")
const hodModel=require("../models/hod")
const securityModel =require("../models/security")
require("dotenv").config()
const nodemailer=require('nodemailer')


const router = express.Router()



router.post("/accepthod", async (req, res) => {
    try {
      const hodId = req.body._id;
      await hodModel.findByIdAndUpdate(hodId, { status: "accepted" });
      return res.json({status:"accepted"})
    
    } catch (error) {
      res.status(500).json({ success: false, error: error.message });
    }
  });

  router.post("/rejecthod", async (req, res) => {
    try {
      const hodId = req.body._id;
      await hodModel.findByIdAndUpdate(hodId, { status: "rejected" });
      return res.json({status:"rejected"})
    
    } catch (error) {
      res.status(500).json({ success: false, error: error.message });
    }
  });



  router.get("/acceptedHODs", async (req, res) => {
    try {
      // Find all HODs with status "accepted"
      const acceptedHODs = await hodModel.find({ status: "accepted" });
  
      // Send the response with the found HODs
      res.json(acceptedHODs);
    } catch (error) {
      console.error("Error fetching accepted HODs:", error);
      res.status(500).json({ success: false, error: "Internal server error" });
    }
  });
  

  router.post("/addsecurity",async(req,res)=>{
    let data=req.body
    let package=new securityModel(data)
    let result=await package.save()
    res.json({
        status:"success"
    })  
})

router.get("/allsecurity",async(req,res)=>{

    let data = await securityModel.find()
    res.json(data)

})

router.get("/pendingHODs", async (req, res) => {
    try {
        // Find all HODs with status "pending"
        const pendingHODs = await hodModel.find({ status: "pending" });

        // Send the response with the found HODs
        res.json(pendingHODs);
    } catch (error) {
        console.error("Error fetching pending HODs:", error);
        res.status(500).json({ success: false, error: "Internal server error" });
    }
});


router.get("/allhods", async (req, res) => {
    try {
        // Find all HODs
        const allHODs = await hodModel.find();
        res.json({ success: true, data: allHODs });
    } catch (error) {
        console.error("Error fetching all HODs:", error);
        res.status(500).json({ success: false, error: "Internal server error" });
    }
});

//Node mailer






const transporter = nodemailer.createTransport({
  host: 'smtp.gmail.com',
  port: 465,
  secure: true, // Use secure mode
  auth: {
    user: process.env.EMAIL_ID,
    pass: process.env.EMAIL_APPCODE,
  },
  // Trust self-signed certificate (not recommended for production)
  tls: {
    rejectUnauthorized: false,
  },
});



// Define a route for sending emails
router.post('/sendEmail', (req, res) => {
  const { to, subject, password, name } = req.body;

  // Ensure a valid recipient email is present
  if (!to || !to.trim()) {
    return res.status(400).json({ error: 'Missing recipient email address' });
  }

  const mailOptions = {
    from: process.env.EMAIL_ID, // Use environment variables for sender email
    to,
    subject,
    text: `Welcome to guardU APP ${name}\n\n Your Username : ${to}\n Password :${password}`,
  };

  // Send email
  transporter.sendMail(mailOptions, (error, info) => {
    if (error) {
      console.error('Error sending email:', error);
      res.status(500).json({ error: 'Failed to send email' });
    } else {
      console.log('Email sent:', info.response);
      res.status(200).json({ status: 'Email sent successfully' });
    }
  });
});



module.exports = router


